//
// +-------------------------------------------------------------------------+
// |      This file was generated by The Interactive Disassembler (IDA)      |
// |           Copyright (c) 2022 Hex-Rays, <support@hex-rays.com>           |
// |                            Freeware version                             |
// +-------------------------------------------------------------------------+
//
//
//      This file contains the user-defined type definitions.
//      To use it press F2 in IDA and enter the name of this file.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
        Enums();              // enumerations
        Structures();         // structure types
        ApplyStrucTInfos();
	set_inf_attr(INF_LOW_OFF, 0x401000);
	set_inf_attr(INF_HIGH_OFF, 0x5C6000);
}

static Enums_0(id) {

	id = add_enum(-1,"gePixelFormat",0x1100000);
	add_enum_member(id,"GE_PIXELFORMAT_NO_DATA",	0,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_8BIT",	0X1,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_8BIT_GRAY",	0X2,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_16BIT_555_RGB",	0X3,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_16BIT_555_BGR",	0X4,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_16BIT_565_RGB",	0X5,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_16BIT_565_BGR",	0X6,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_16BIT_4444_ARGB",	0X7,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_16BIT_1555_ARGB",	0X8,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_24BIT_RGB",	0X9,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_24BIT_BGR",	0XA,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_24BIT_YUV",	0XB,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_32BIT_RGBX",	0XC,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_32BIT_XRGB",	0XD,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_32BIT_BGRX",	0XE,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_32BIT_XBGR",	0XF,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_32BIT_RGBA",	0X10,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_32BIT_ARGB",	0X11,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_32BIT_BGRA",	0X12,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_32BIT_ABGR",	0X13,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_WAVELET",	0X14,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_16BIT_88_UV",	0X15,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_16BIT_556_UVL",	0X16,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_24BIT_888_UVL",	0X17,	-1);
	add_enum_member(id,"GE_PIXELFORMAT_COUNT",	0X18,	-1);
	id = add_enum(-1,"geEngine_FrameState",0x1100000);
	add_enum_member(id,"FrameState_None",	0,	-1);
	add_enum_member(id,"FrameState_Begin",	0X1,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("_SCOPETABLE_ENTRY");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	id = get_struc_id("CPPEH_RECORD");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "EXCEPTION_POINTERS *");
	SetType(get_member_id(id, 0x8), "struct _EH3_EXCEPTION_REGISTRATION");
	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	SetType(get_member_id(id, 0x0), "struct _EH3_EXCEPTION_REGISTRATION *");
	SetType(get_member_id(id, 0x4), "PVOID");
	SetType(get_member_id(id, 0x8), "PSCOPETABLE_ENTRY");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("geSound_System");
	SetType(get_member_id(id, 0x4), "SoundManager *");
	SetType(get_member_id(id, 0x8), "geFloat");
	id = get_struc_id("IDirectSound");
	SetType(get_member_id(id, 0x0), "struct IDirectSoundVtbl *");
	id = get_struc_id("Channel");
	SetType(get_member_id(id, 0x0), "LPDIRECTSOUNDBUFFER");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "geSound_Cfg");
	SetType(get_member_id(id, 0x18), "void *");
	SetType(get_member_id(id, 0x1C), "struct Channel *");
	SetType(get_member_id(id, 0x20), "struct Channel *");
	id = get_struc_id("WAVEFORMATEX");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	SetType(get_member_id(id, 0x10), "WORD");
	id = get_struc_id("geEngine");
	SetType(get_member_id(id, 0x0), "Sys_DriverInfo");
	SetType(get_member_id(id, 0x3367C), "Sys_CPUInfo");
	SetType(get_member_id(id, 0x33684), "Sys_DebugInfo");
	SetType(get_member_id(id, 0x336AC), "LARGE_INTEGER");
	SetType(get_member_id(id, 0x336B4), "Sys_FontInfo");
	SetType(get_member_id(id, 0x3419C), "User_Info *");
	SetType(get_member_id(id, 0x341A0), "HWND");
	SetType(get_member_id(id, 0x341A4), "char[200]");
	SetType(get_member_id(id, 0x3426C), "int16[20]");
	SetType(get_member_id(id, 0x34294), "int16[20]");
	SetType(get_member_id(id, 0x342BC), "geEngine_WorldList[8]");
	SetType(get_member_id(id, 0x342FC), "int32");
	SetType(get_member_id(id, 0x34300), "geWorld *[8]");
	SetType(get_member_id(id, 0x38320), "geBoolean");
	SetType(get_member_id(id, 0x38324), "char *");
	SetType(get_member_id(id, 0x38328), "BitmapList *");
	SetType(get_member_id(id, 0x3832C), "geBoolean[7]");
	SetType(get_member_id(id, 0x38348), "geRDriver_PixelFormat[7]");
	SetType(get_member_id(id, 0x38380), "geFloat");
	SetType(get_member_id(id, 0x38384), "geFloat");
	SetType(get_member_id(id, 0x38388), "geBoolean");
	SetType(get_member_id(id, 0x3838C), "geFloat");
	SetType(get_member_id(id, 0x38390), "geFloat");
	SetType(get_member_id(id, 0x38394), "geFloat");
	SetType(get_member_id(id, 0x38398), "geFloat");
	SetType(get_member_id(id, 0x3839C), "geFloat");
	SetType(get_member_id(id, 0x383A0), "geFloat");
	SetType(get_member_id(id, 0x383A4), "geFloat");
	SetType(get_member_id(id, 0x383A8), "geFloat");
	SetType(get_member_id(id, 0x383AC), "geBoolean");
	SetType(get_member_id(id, 0x383B0), "int");
	SetType(get_member_id(id, 0x383B4), "geFloat");
	SetType(get_member_id(id, 0x383B8), "geFloat");
	SetType(get_member_id(id, 0x383BC), "geFloat");
	SetType(get_member_id(id, 0x383C0), "geFloat");
	SetType(get_member_id(id, 0x383C4), "geEngine_FrameState");
	id = get_struc_id("net_host_something_t");
	SetType(get_member_id(id, 0x8), "geEngine *");
	SetType(get_member_id(id, 0x10), "GameMgr_ *");
	id = get_struc_id("geNetMgr");
	SetType(get_member_id(id, 0x0), "geNetMgr *");
	id = get_struc_id("DSBUFFERDESC");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "LPWAVEFORMATEX");
	id = get_struc_id("geSound_Cfg");
	SetType(get_member_id(id, 0x0), "geFloat");
	SetType(get_member_id(id, 0x4), "geFloat");
	SetType(get_member_id(id, 0x8), "geFloat");
	id = get_struc_id("Sys_DriverInfo");
	SetType(get_member_id(id, 0x0), "geDriver[12]");
	SetType(get_member_id(id, 0x33660), "int32");
	SetType(get_member_id(id, 0x33664), "char *");
	SetType(get_member_id(id, 0x33668), "geBoolean");
	SetType(get_member_id(id, 0x3366C), "HINSTANCE");
	SetType(get_member_id(id, 0x33670), "geDriver *");
	SetType(get_member_id(id, 0x33674), "geDriver_Mode *");
	SetType(get_member_id(id, 0x33678), "DRV_Driver *");
	id = get_struc_id("vtbl_or_something");
	id = get_struc_id("geDriver");
	SetType(get_member_id(id, 0x0), "int32");
	SetType(get_member_id(id, 0x4), "char[512]");
	SetType(get_member_id(id, 0x204), "char[256]");
	SetType(get_member_id(id, 0x304), "geDriver_Mode[32]");
	SetType(get_member_id(id, 0x4484), "int32");
	id = get_struc_id("geDriver_Mode");
	SetType(get_member_id(id, 0x0), "int32");
	SetType(get_member_id(id, 0x4), "char[512]");
	SetType(get_member_id(id, 0x204), "int32");
	SetType(get_member_id(id, 0x208), "int32");
	id = get_struc_id("Sys_CPUInfo");
	SetType(get_member_id(id, 0x0), "LARGE_INTEGER");
	id = get_struc_id("LARGE_INTEGER");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("Sys_DebugInfo");
	SetType(get_member_id(id, 0x0), "int32");
	SetType(get_member_id(id, 0x4), "int32");
	SetType(get_member_id(id, 0x8), "int32");
	SetType(get_member_id(id, 0xC), "int32");
	SetType(get_member_id(id, 0x10), "int32");
	SetType(get_member_id(id, 0x14), "int32");
	SetType(get_member_id(id, 0x18), "int32");
	SetType(get_member_id(id, 0x1C), "int32");
	SetType(get_member_id(id, 0x20), "int32");
	SetType(get_member_id(id, 0x24), "int32");
	id = get_struc_id("Sys_FontInfo");
	SetType(get_member_id(id, 0x0), "geBitmap *");
	SetType(get_member_id(id, 0x4), "uint32[256]");
	SetType(get_member_id(id, 0x404), "Sys_String[20]");
	SetType(get_member_id(id, 0xAE4), "int32");
	id = get_struc_id("Sys_String");
	SetType(get_member_id(id, 0x0), "int32");
	SetType(get_member_id(id, 0x4), "int32");
	SetType(get_member_id(id, 0x8), "char[80]");
	id = get_struc_id("geEngine_WorldList");
	SetType(get_member_id(id, 0x0), "geWorld *");
	SetType(get_member_id(id, 0x4), "int32");
	id = get_struc_id("geRDriver_PixelFormat");
	SetType(get_member_id(id, 0x0), "gePixelFormat");
	SetType(get_member_id(id, 0x4), "uint32");
	id = get_struc_id("tagWNDCLASSA");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "WNDPROC");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "HINSTANCE");
	SetType(get_member_id(id, 0x14), "HICON");
	SetType(get_member_id(id, 0x18), "HCURSOR");
	SetType(get_member_id(id, 0x1C), "HBRUSH");
	SetType(get_member_id(id, 0x20), "LPCSTR");
	SetType(get_member_id(id, 0x24), "LPCSTR");
	id = get_struc_id("GameMgr_");
	SetType(get_member_id(id, 0x0), "GameMgr_ *");
	SetType(get_member_id(id, 0x8), "char *");
	SetType(get_member_id(id, 0xC), "geSound_System *");
	SetType(get_member_id(id, 0x14), "HWND");
	SetType(get_member_id(id, 0x11738), "GameMgr_ *");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"_SCOPETABLE_ENTRY",0);
	id = add_struc(-1,"CPPEH_RECORD",0);
	id = add_struc(-1,"_EH3_EXCEPTION_REGISTRATION",0);
	id = add_struc(-1,"geSound_System",0);
	id = add_struc(-1,"IDirectSound",0);
	id = add_struc(-1,"Channel",0);
	id = add_struc(-1,"WAVEFORMATEX",0);
	id = add_struc(-1,"geEngine",0);
	id = add_struc(-1,"net_host_something_t",0);
	id = add_struc(-1,"geNetMgr",0);
	id = add_struc(-1,"DSBUFFERDESC",0);
	id = add_struc(-1,"geSound_Cfg",0);
	id = add_struc(-1,"Sys_DriverInfo",0);
	id = add_struc(-1,"vtbl_or_something",0);
	id = add_struc(-1,"geDriver",0);
	id = add_struc(-1,"geDriver_Mode",0);
	id = add_struc(-1,"Sys_CPUInfo",0);
	id = add_struc(-1,"LARGE_INTEGER",0);
	id = add_struc(-1,"Sys_DebugInfo",0);
	id = add_struc(-1,"Sys_FontInfo",0);
	id = add_struc(-1,"Sys_String",0);
	id = add_struc(-1,"geEngine_WorldList",0);
	id = add_struc(-1,"geRDriver_PixelFormat",0);
	id = add_struc(-1,"tagWNDCLASSA",0);
	id = add_struc(-1,"GameMgr_",0);
	
	id = get_struc_id("_SCOPETABLE_ENTRY");
	mid = add_struc_member(id,"EnclosingLevel",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FilterFunc",	0X4,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"HandlerFunc",	0X8,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	mid = add_struc_member(id,"Next",	0,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExceptionHandler",	0X4,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ScopeTable",	0X8,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TryLevel",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("CPPEH_RECORD");
	mid = add_struc_member(id,"old_esp",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"exc_ptr",	0X4,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"registration",	0X8,	0x60000400,	get_struc_id("_EH3_EXCEPTION_REGISTRATION"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("geSound_System");
	mid = add_struc_member(id,"Active",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SoundM",	0X4,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GlobalVolume",	0X8,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("IDirectSound");
	mid = add_struc_member(id,"lpVtbl",	0,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("geSound_Cfg");
	mid = add_struc_member(id,"Volume",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"Pan",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"Frequency",	0X8,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Channel");
	mid = add_struc_member(id,"buffer",	0,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ID",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"BaseFreq",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cfg",	0XC,	0x60000400,	get_struc_id("geSound_Cfg"),	12);
	mid = add_struc_member(id,"Data",	0X18,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"next",	0X1C,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"nextDup",	0X20,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("WAVEFORMATEX");
	mid = add_struc_member(id,"wFormatTag",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"nChannels",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"nSamplesPerSec",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"nAvgBytesPerSec",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"nBlockAlign",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wBitsPerSample",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"cbSize",	0X10,	0x10000400,	-1,	2);
	set_struc_align(id,2);
	
	id = get_struc_id("geDriver_Mode");
	mid = add_struc_member(id,"Id",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Name",	0X4,	0x000400,	-1,	512);
	mid = add_struc_member(id,"Width",	0X204,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Height",	0X208,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("geDriver");
	mid = add_struc_member(id,"Id",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Name",	0X4,	0x000400,	-1,	512);
	mid = add_struc_member(id,"FileName",	0X204,	0x000400,	-1,	256);
	mid = add_struc_member(id,"Modes",	0X304,	0x60000400,	get_struc_id("geDriver_Mode"),	16768);
	mid = add_struc_member(id,"NumModes",	0X4484,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Sys_DriverInfo");
	mid = add_struc_member(id,"SubDrivers",	0,	0x60000400,	get_struc_id("geDriver"),	210528);
	mid = add_struc_member(id,"NumSubDrivers",	0X33660,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CurFileName",	0X33664,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Active",	0X33668,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DriverHandle",	0X3366C,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CurDriver",	0X33670,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CurMode",	0X33674,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RDriver",	0X33678,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("LARGE_INTEGER");
	mid = add_struc_member(id,"lo",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hi",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Sys_CPUInfo");
	mid = add_struc_member(id,"Freq",	0,	0x60000400,	get_struc_id("LARGE_INTEGER"),	8);
	set_struc_align(id,2);
	
	id = get_struc_id("Sys_DebugInfo");
	mid = add_struc_member(id,"TraversedPolys",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SentPolys",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RenderedPolys",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumModels",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumMirrors",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumActors",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumDLights",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumFog",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LMap1",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LMap2",	0X24,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Sys_String");
	mid = add_struc_member(id,"x",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"String",	0X8,	0x000400,	-1,	80);
	set_struc_align(id,2);
	
	id = get_struc_id("Sys_FontInfo");
	mid = add_struc_member(id,"FontBitmap",	0,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FontLUT1",	0X4,	0x20000400,	-1,	1024);
	mid = add_struc_member(id,"ClientStrings",	0X404,	0x60000400,	get_struc_id("Sys_String"),	1760);
	mid = add_struc_member(id,"NumStrings",	0XAE4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("geEngine_WorldList");
	mid = add_struc_member(id,"World",	0,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RefCount",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("geRDriver_PixelFormat");
	mid = add_struc_member(id,"PixelFormat",	0,	0x28800400,	get_enum("gePixelFormat"),	4);
	mid = add_struc_member(id,"Flags",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("geEngine");
	mid = add_struc_member(id,"DriverInfo",	0,	0x60000400,	get_struc_id("Sys_DriverInfo"),	210556);
	mid = add_struc_member(id,"CPUInfo",	0X3367C,	0x60000400,	get_struc_id("Sys_CPUInfo"),	8);
	mid = add_struc_member(id,"DebugInfo",	0X33684,	0x60000400,	get_struc_id("Sys_DebugInfo"),	40);
	mid = add_struc_member(id,"CurrentTic",	0X336AC,	0x60000400,	get_struc_id("LARGE_INTEGER"),	8);
	mid = add_struc_member(id,"FontInfo",	0X336B4,	0x60000400,	get_struc_id("Sys_FontInfo"),	2792);
	mid = add_struc_member(id,"UserInfo",	0X3419C,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hWnd",	0X341A0,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AppName",	0X341A4,	0x000400,	-1,	200);
	mid = add_struc_member(id,"WaveTable",	0X3426C,	0x10000400,	-1,	40);
	mid = add_struc_member(id,"WaveDir",	0X34294,	0x10000400,	-1,	40);
	mid = add_struc_member(id,"WorldList",	0X342BC,	0x60000400,	get_struc_id("geEngine_WorldList"),	64);
	mid = add_struc_member(id,"NumWorlds",	0X342FC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Worlds",	0X34300,	0x25500400,	0XFFFFFFFFFFFFFFFF,	32,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"StyleLUT1",	0X34320,	0x000400,	-1,	16384);
	mid = add_struc_member(id,"DisplayFrameRateCounter",	0X38320,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DriverDirectory",	0X38324,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AttachedBitmaps",	0X38328,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"HasPixelFormat",	0X3832C,	0x20000400,	-1,	28);
	mid = add_struc_member(id,"PixelFormats",	0X38348,	0x60000400,	get_struc_id("geRDriver_PixelFormat"),	56);
	mid = add_struc_member(id,"CurrentGamma",	0X38380,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"BitmapGamma",	0X38384,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"FogEnable",	0X38388,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FogR",	0X3838C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"FogG",	0X38390,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"FogB",	0X38394,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"FogStart",	0X38398,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"FogEnd",	0X3839C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"ClearR",	0X383A0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"ClearG",	0X383A4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"ClearB",	0X383A8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"StencilShadowsEnable",	0X383AC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumStencilShadowLights",	0X383B0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ShadowR",	0X383B4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"ShadowG",	0X383B8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"ShadowB",	0X383BC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"ShadowA",	0X383C0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"FrameState",	0X383C4,	0x28800400,	get_enum("geEngine_FrameState"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("net_host_something_t");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Engine",	0X8,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gameMgr",	0X10,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_48",	0X30,	0x000400,	-1,	1);
	
	id = get_struc_id("geNetMgr");
	mid = add_struc_member(id,"valid",	0,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("DSBUFFERDESC");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwBufferBytes",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpwfxFormat",	0X10,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("vtbl_or_something");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_78",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_80",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_88",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8F",	0X8F,	0x000400,	-1,	1);
	
	id = get_struc_id("tagWNDCLASSA");
	mid = add_struc_member(id,"style",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpfnWndProc",	0X4,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"cbClsExtra",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cbWndExtra",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hInstance",	0X10,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hIcon",	0X14,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hCursor",	0X18,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hbrBackground",	0X1C,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpszMenuName",	0X20,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpszClassName",	0X24,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("GameMgr_");
	mid = add_struc_member(id,"thisP",	0,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Engine",	0X8,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"sound",	0XC,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CurrentDirectory_maybe",	0X14,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_52C",	0X52C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_11734",	0X11734,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"thisP2",	0X11738,	0x25500400,	0XFFFFFFFFFFFFFFFF,	4,	0XFFFFFFFFFFFFFFFF,	0,	0x000002);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
        end_type_updating(UTP_STRUCT);
}

// End of file.
